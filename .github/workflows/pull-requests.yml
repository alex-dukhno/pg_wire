name: Pull Requests

on:
  pull_request:
    branches: [ main ]

env:
  RUST_BACKTRACE: 1

defaults:
  run:
    shell: bash

jobs:
  rustfmt:
    name: rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    needs:
      - rustfmt
    name: clippy
    strategy:
      matrix:
        feature:
          - async_io
          - tokio_net
          - mock_net
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all --features ${{ matrix.feature }}

  tests:
    needs:
      - rustfmt
      - clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/install@v0.1
        with:
          crate: cargo-tarpaulin
          version: 0.16.0
          use-tool-cache: true
      - uses: actions-rs/cargo@v1
        with:
          command: tarpaulin
          args: --all --ignore-tests -o Lcov --output-dir ./coverage --features mock_net
      - name: payload tests
        run: cargo tarpaulin --all --ignore-tests -o Lcov --output-dir ../coverage
        working-directory: ./payload
      - uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  ci-success:
    name: ci
    if: github.event_name == 'push' && success()
    needs:
      - tests
      - rustfmt
      - clippy
    runs-on: ubuntu-latest
    steps:
      - name: Mark the job as a success
        run: exit 0

  ci-failure:
    name: ci
    if: github.event_name == 'push' && !success()
    needs:
      - tests
      - rustfmt
      - clippy
    runs-on: ubuntu-latest
    steps:
      - name: Mark the job as a failure
        run: exit 1
